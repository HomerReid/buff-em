NumRegions=18;
<< DefineP.math

<< GetXiLimits.math
<< DuffyTransformations.math
<< DefinePBar.math

(*************************************************************)
(*************************************************************)
(*************************************************************)
GetScriptP4CV[PFunction_, Name_]:=Module[
(***)
 {OutFile, d},
(***)
 OutFile=OpenWrite[ StringJoin["ScriptP_CommonTet_",Name,".cc"] ];
 For[ d=0, d<NumRegions, d++,

     uXiVector=GetuXiVector[d, 4];
     PBar=PBar4CV[PFunction, d, uXiVector[[1]], uXiVector[[2]], uXiVector[[3]] ];
     MySeries=Series[ PBar, {w,0,10} ];
     For[ n=0, n<10, n++,
          ScriptP = FullSimplify[Coefficient[MySeries,w,n]];
          If[ !(ScriptP===0),
              (*Print[ "P[", d, "][", n, "]=", CForm[ScriptP], ";" ]*)
              WriteString[OutFile, "P[", d, "][", n, "]=", CForm[ScriptP], ";\n" ]
            ]
        ];
     (*Print[];*)
     WriteString[OutFile,"\n"];
    ]
  Close[OutFile];
];

(*************************************************************)
(*************************************************************)
(*************************************************************)
GetScriptP3CV[PFunction_, Name_]:=Module[
(***)
 {OutFile, d},
(***)
 OutFile=OpenWrite[ StringJoin["ScriptP_CommonTriangle_",Name,".cc"] ];
 For[ d=0, d<NumRegions, d++,

     uXiVector=GetuXiVector[d, 3];
     PBar=PBar3CV[PFunction, d, uXiVector[[1]], uXiVector[[2]],
                  uXiVector[[3]], uXiVector[[4]] ];
     MySeries=Series[ PBar, {w,0,10} ];
     For[ n=0, n<10, n++,
          ScriptP = FullSimplify[Coefficient[MySeries,w,n]];
          If[ !(ScriptP===0),
              WriteString[OutFile, "P[", d, "][", n, "]=", CForm[ScriptP], ";\n" ];
            ]
        ];
     WriteString[OutFile,"\n"];
    ];
 Close[OutFile];
]

(*************************************************************)
(*************************************************************)
(*************************************************************)
GetScriptP2CV[PFunction_, Name_]:=Module[
(***)
 {OutFile, d},
(***)
 OutFile=OpenWrite[ StringJoin["ScriptP_CommonEdge_",Name,".cc"] ];
 For[ d=0, d<NumRegions, d++,

     uXiVector=GetuXiVector[d, 2];
     PBar=PBar2CV[PFunction, d, uXiVector[[1]], uXiVector[[2]],
                  uXiVector[[3]], uXiVector[[4]], uXiVector[[5]] ];
     MySeries=Series[ PBar, {w,0,10} ];
     For[ n=0, n<10, n++,
          ScriptP = FullSimplify[Coefficient[MySeries,w,n]];
          If[ !(ScriptP===0), 
              WriteString[OutFile, "P[", d, "][", n, "]=", CForm[ScriptP], ";\n" ]
            ]
        ];
     WriteString[OutFile,"\n"];
    ]

 Close[OutFile];

];

(*************************************************************)
(* usage example:                                            *)
(*  WriteScriptP[4, PBDotBP, "BDotBP"]                       *)
(*************************************************************)
WriteScriptP[NCV_, PFunction_, Name_]:=Switch[ NCV,
 4, GetScriptP4CV[PFunction, Name],
 3, GetScriptP3CV[PFunction, Name],
 2, GetScriptP2CV[PFunction, Name]
];
